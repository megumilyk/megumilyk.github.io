<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GuZero</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2020-09-08T14:37:08.683Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>GuZero</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>kafka集群安装部署</title>
    <link href="http://example.com/2020/09/08/kafka%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/"/>
    <id>http://example.com/2020/09/08/kafka%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</id>
    <published>2020-09-08T12:30:27.000Z</published>
    <updated>2020-09-08T14:37:08.683Z</updated>
    
    <content type="html"><![CDATA[<p>kafka集群部署依赖于zk的部署，这里默认zk集群已经搭建zk集群ip分别为：</p><p>192.168.1.100 server.1，192.168.1.101 server.2，192.168.1.102 server.3</p><p>修改kafka配置文件，每个节点的broker.id 唯一</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">broker.id&#x3D;1</span><br><span class="line">zookeeper.connect&#x3D;192.168.1.100:2181,192.168.1.101:2181,192.168.1.102:2181</span><br></pre></td></tr></table></figure><p>启动集群，可以把kafka添加进环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup kafka-server-start.sh 配置文件地址 &amp;&gt;&gt; 日志地址 &amp;</span><br></pre></td></tr></table></figure><p>测试集群</p><p>在其中一台虚拟机创建topic</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kafka-topics.sh --create --zookeeper zkip:2181 --replication-factor 3 --partitions 1 --topic <span class="built_in">test</span>-topic</span><br></pre></td></tr></table></figure><p>查看创建的topic信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kafka-topics.sh --describe --zookeeper 本地ip:2181 --topic test-topic</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;kafka集群部署依赖于zk的部署，这里默认zk集群已经搭建zk集群ip分别为：&lt;/p&gt;
&lt;p&gt;192.168.1.100 server.1，192.168.1.101 server.2，192.168.1.102 server.3&lt;/p&gt;
&lt;p&gt;修改kafka配置文件，每</summary>
      
    
    
    
    <category term="工作" scheme="http://example.com/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
    <category term="日记" scheme="http://example.com/tags/%E6%97%A5%E8%AE%B0/"/>
    
    <category term="kafka" scheme="http://example.com/tags/kafka/"/>
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
    <category term="集群" scheme="http://example.com/tags/%E9%9B%86%E7%BE%A4/"/>
    
  </entry>
  
  <entry>
    <title>zookeeper集群安装部署</title>
    <link href="http://example.com/2020/09/08/zookeeper%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/"/>
    <id>http://example.com/2020/09/08/zookeeper%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</id>
    <published>2020-09-08T12:29:12.000Z</published>
    <updated>2020-09-08T14:37:10.985Z</updated>
    
    <content type="html"><![CDATA[<p>昨天了解了工作的大致内容，主要是有关中间件部署运维的内容。今天尝试在3台虚拟机上安装zookeeper集群。因为工作地点是在银行内部无法连接外网，所以用的所有部署软件都是来自内部维护的公共资源库中拉取。</p><p>以下是zookeeper的安装步骤</p><p>###1. 安装jdk<br>首先获取jdk安装包 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget jdk下载路径</span><br></pre></td></tr></table></figure><p>解压安装包，今天这里遇到了一个坑就是下载的jdk压缩包是.gz结尾的不是.tar.gz，所以上网查了资料说是用gunzip 解压，结果用gunzip解压后压根不行，也不知道是什么原因。最后使用tar进行的解压，完美运行。刚开始也是用的tar命令一直报错，好像是没加权限。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tar zvf jdk1.8.gz </span><br></pre></td></tr></table></figure><p>解压完成后就是配置环境变量了，具体配置就不展开写了，网上随便找。就是修改/etc/profile文件，所以的环境变量都是在这个文件里面配置的。配置完成后需要执行以下命令载入配置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><p>最后验证jdk是否成功安装,在终端直接输入以下命令，出现版本就是成功安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><h3 id="2-配置zookeeper"><a href="#2-配置zookeeper" class="headerlink" title="2.配置zookeeper"></a>2.配置zookeeper</h3><p>下载zookeeper，解压，在解压后的目录里面新建一个zk_data文件夹，文件夹也可以在其他地方建（可以不建，但不推荐）记住文件夹的地址就行。</p><p>找到配置文件修改，配置文件一般放在conf目录下。因为我用的是kafka自带的zookeeper，在conf中的zookeeper.properties中，如果是单独下配置文件是zoo_sample.cfg，集群里面的配置都一样，所以修改好一个其他的CV就行了。</p><p>修改配置文件</p><p>修改dataDir： zk_data文件夹目录地址</p><p>最后在下面添加以下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">server.1=ip1:2888:3888</span><br><span class="line">server.2=ip2:2888:3888</span><br><span class="line">server.3=ip3:2888:3888</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>然后在zk_data下贱一个myid的文件，在里面写上1（server点的编号，也可以是abc server.a,server.b）就行了,每一台集群的机器都要添加一个myid文件。注意不要重复。ip就是集群的ip地址，端口2888是用于zookeeper通信选取leader的，</p><p>3888是zookeeper服务器的通信端口。这两个端口不要动</p><p>到这里集群的配置就已经结束了。有条件的可以把zk添加进环境变量中，这样方便使用。</p><h3 id="3-启动服务"><a href="#3-启动服务" class="headerlink" title="3.启动服务"></a>3.启动服务</h3><p>依次启动各个节点的zookeeper</p><p>启动完成后查看节点状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="built_in">stat</span>|nc 127.0.0.1 2181</span><br></pre></td></tr></table></figure><p>来查看哪个节点被选择作为follower或者leader</p><p>其他排错命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ps aux|grep zookeeper <span class="comment">#查看zk进程</span></span><br><span class="line">nc -zv ip 端口 <span class="comment">#端口测试</span></span><br><span class="line">nohup ./zkServer.sh start &amp; <span class="comment">#后台启动zk</span></span><br><span class="line"><span class="built_in">echo</span> ruok|nc 127.0.0.1 2181 <span class="comment">#测试是否启动了该Server，若回复imok表示已经启动。</span></span><br><span class="line"><span class="built_in">echo</span> cons | nc 127.0.0.1 2181 <span class="comment">#列出所有连接到服务器的客户端的完全的连接 / 会话的详细信息。</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;昨天了解了工作的大致内容，主要是有关中间件部署运维的内容。今天尝试在3台虚拟机上安装zookeeper集群。因为工作地点是在银行内部无法连接外网，所以用的所有部署软件都是来自内部维护的公共资源库中拉取。&lt;/p&gt;
&lt;p&gt;以下是zookeeper的安装步骤&lt;/p&gt;
&lt;p&gt;###</summary>
      
    
    
    
    <category term="工作" scheme="http://example.com/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
    <category term="日记" scheme="http://example.com/tags/%E6%97%A5%E8%AE%B0/"/>
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
    <category term="集群" scheme="http://example.com/tags/%E9%9B%86%E7%BE%A4/"/>
    
    <category term="zookeeper" scheme="http://example.com/tags/zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>第一篇博文</title>
    <link href="http://example.com/2020/09/07/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E6%96%87/"/>
    <id>http://example.com/2020/09/07/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E6%96%87/</id>
    <published>2020-09-07T12:27:47.000Z</published>
    <updated>2020-09-07T14:07:38.276Z</updated>
    
    <content type="html"><![CDATA[<img src= "/img/loading.gif" data-src="/2020/09/07/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E6%96%87/1.jpg" class title="This is an image"><p>这是我的第一篇个人博客，作为来上海的新的开始，主要用于记录个人技术，用于提高个体技术栈希望以后可以坚持把博客写下去，以此共勉。加油！！！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;img src= &quot;/img/loading.gif&quot; data-src=&quot;/2020/09/07/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E6%96%87/1.jpg&quot; class title=&quot;This is an image&quot;&gt;
&lt;p&gt;这</summary>
      
    
    
    
    <category term="随笔" scheme="http://example.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="日记" scheme="http://example.com/tags/%E6%97%A5%E8%AE%B0/"/>
    
    <category term="记录" scheme="http://example.com/tags/%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2020/09/06/hello-world/"/>
    <id>http://example.com/2020/09/06/hello-world/</id>
    <published>2020-09-06T11:21:29.653Z</published>
    <updated>2020-09-06T12:51:16.260Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    <category term="web前端" scheme="http://example.com/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="jQuery" scheme="http://example.com/tags/jQuery/"/>
    
    <category term="表格" scheme="http://example.com/tags/%E8%A1%A8%E6%A0%BC/"/>
    
    <category term="表单验证" scheme="http://example.com/tags/%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81/"/>
    
  </entry>
  
</feed>
